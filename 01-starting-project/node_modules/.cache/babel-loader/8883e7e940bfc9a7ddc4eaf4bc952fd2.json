{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/Practice_Project_Adding_Http&Forms/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-331ba-default-rtdb.firebaseio.com/meals.json');\n\n      try {\n        if (response.ok) {\n          const responseData = await response.json();\n          const loadedMeals = [];\n\n          for (const key in responseData) {\n            loadedMeals.push({\n              id: key,\n              name: responseData[key].name,\n              description: responseData[key].description,\n              price: responseData[key].price\n            });\n          }\n        } else {\n          throw new Error('not found emty');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (!isLoading && error) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"lpPRFYL8ceDwto6m6kA7D71aHFs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/alind/Downloads/Practice_Project_Adding_Http&Forms/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","ok","responseData","json","loadedMeals","key","push","id","name","description","price","Error","console","log","MealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA2BR,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;AACA,UAAG;AACD,YAAGD,QAAQ,CAACE,EAAZ,EAAe;AACf,gBAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AAEA,gBAAMC,WAAW,GAAG,EAApB;;AAEA,eAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,YAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,cAAAA,EAAE,EAAEF,GADW;AAEfG,cAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,cAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,cAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,aAAjB;AAMD;AAAC,SAZF,MAYM;AACJ,gBAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;AAEF,OAjBD,CAiBC,OAAMf,KAAN,EAAY;AACXgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD;;AAGDH,MAAAA,QAAQ,CAACW,WAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KA1BD;;AA4BAG,IAAAA,UAAU;AAEX,GAhCQ,EAgCN,EAhCM,CAAT;;AAiCA,MAAG,CAACJ,SAAD,IAAYE,KAAf,EAAqB;AACnB;AAAA;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACwB,YAA5B;AAAA,6BACE;AAAA,kBACGlB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAKD;;AACD,MAAGF,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACwB,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AAED,QAAMC,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACV,EAFX;AAGE,IAAA,IAAI,EAAEU,IAAI,CAACT,IAHb;AAIE,IAAA,WAAW,EAAES,IAAI,CAACR,WAJpB;AAKE,IAAA,KAAK,EAAEQ,IAAI,CAACP;AALd,KACOO,IAAI,CAACV,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAWA,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKuB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvED;;GAAMxB,c;;KAAAA,c;AAyEN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading]= useState(true);\n  const [error, setError]= useState(null);\n\n  useEffect(() => {\n    \n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-331ba-default-rtdb.firebaseio.com/meals.json');\n      try{\n        if(response.ok){\n        const responseData = await response.json();\n        \n        const loadedMeals = [];\n  \n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price,\n          });\n        }}else{\n          throw new Error('not found emty')\n        }\n        \n      }catch(error){\n        console.log(error);\n      }\n      \n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n   \n  }, []);\n  if(!isLoading&&error){\n    <section className={classes.MealsLoading}>\n      <p>\n        {error}\n      </p>\n    </section>\n  }\n  if(isLoading){\n    return <section className={classes.MealsLoading}>\n      <p>\n        Loading......\n      </p>\n    </section>\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n   \n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}