{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/Practice_Project_Adding_Http&Forms/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-331ba-default-rtdb.firebaseio.com/meals.json');\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        throw new Error('Something Went Wrong');\n      }\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"lpPRFYL8ceDwto6m6kA7D71aHFs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/alind/Downloads/Practice_Project_Adding_Http&Forms/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","responseData","json","ok","Error","loadedMeals","key","push","id","name","description","price","message","MealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA2BR,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMY,UAAU,GAAG,YAAY;AAE7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBL,YAAlB,EAAgC;AAC9BI,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAER,YAAY,CAACK,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAET,YAAY,CAACK,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAEV,YAAY,CAACK,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AAEDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD;;AAqBJ,QAAG;AACDG,MAAAA,UAAU;AACX,KAFD,CAEC,OAAMF,KAAN,EAAY;AACXD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AAED;AACE,GA9BQ,EA8BN,EA9BM,CAAT;;AA+BA,MAAIhB,KAAJ,EAAU;AACR,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACuB,YAA5B;AAAA,6BACL;AAAA,kBACCjB;AADD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AACD,MAAGF,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACuB,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AAED,QAAMC,SAAS,GAAGtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACR,EAFX;AAGE,IAAA,IAAI,EAAEQ,IAAI,CAACP,IAHb;AAIE,IAAA,WAAW,EAAEO,IAAI,CAACN,WAJpB;AAKE,IAAA,KAAK,EAAEM,IAAI,CAACL;AALd,KACOK,IAAI,CAACR,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAWA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKsB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArED;;GAAMvB,c;;KAAAA,c;AAuEN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading]= useState(true);\n  const [error, setError]= useState(null);\n\n  useEffect(() => {\n    \n    const fetchMeals = async () => {\n      \n      const response = await fetch('https://react-http-331ba-default-rtdb.firebaseio.com/meals.json');\n      const responseData = await response.json();\n      if(!response.ok){\n        throw new Error('Something Went Wrong')\n      }\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\ntry{\n  fetchMeals();\n}catch(error){\n  setIsLoading(false);\n  setError(error.message);\n\n}\n  }, []);\n  if( error){\n    return <section className={classes.MealsLoading}>\n      <p>\n      {error}\n      </p>\n    </section>\n  }\n  if(isLoading){\n    return <section className={classes.MealsLoading}>\n      <p>\n        Loading......\n      </p>\n    </section>\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n   \n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}